/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

// --- Imports ---
import controladores.Controller;
import controladores.FIFO;
import controladores.MRU;
import controladores.PageReplacementAlgorithm;
import controladores.RND;
import controladores.SC;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.SpinnerListModel;

/**
 *
 * @author wess
 */
public class Menu extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Menu.class.getName());

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        // Configuración inicial
        this.setTitle("Simulador de Paginación - Configuración");
        this.setLocationRelativeTo(null); // Centrar en pantalla
        
        // Configurar los spinners con los valores del PDF
        spinnerProcesos.setModel(new SpinnerListModel(new Integer[]{10, 50, 100}));
        spinnerOperaciones.setModel(new SpinnerListModel(new Integer[]{500, 1000, 5000}));
        
        // Estado inicial de la UI (Cargar por defecto)
        radioCargarArchivo.setSelected(true);
        toggleInputSource(true);
    }
    
    /**
     * Habilita/Deshabilita los paneles de entrada según la selección del radio button.
     * @param isFileMode true si "Cargar Archivo" está seleccionado, false si "Generar" lo está.
     */
    private void toggleInputSource(boolean isFileMode) {
        // Controles de "Cargar Archivo"
        lblRutaArchivo.setEnabled(isFileMode);
        txtRutaArchivo.setEnabled(isFileMode);
        btnBuscarArchivo.setEnabled(isFileMode);

        // Controles de "Generar Simulación"
        lblProcesos.setEnabled(!isFileMode);
        spinnerProcesos.setEnabled(!isFileMode);
        lblOperaciones.setEnabled(!isFileMode);
        spinnerOperaciones.setEnabled(!isFileMode);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        btnGroupFuente = new javax.swing.ButtonGroup();
        panelFuente = new javax.swing.JPanel();
        radioCargarArchivo = new javax.swing.JRadioButton();
        lblRutaArchivo = new javax.swing.JLabel();
        txtRutaArchivo = new javax.swing.JTextField();
        btnBuscarArchivo = new javax.swing.JButton();
        radioGenerarNuevo = new javax.swing.JRadioButton();
        lblProcesos = new javax.swing.JLabel();
        spinnerProcesos = new javax.swing.JSpinner();
        lblOperaciones = new javax.swing.JLabel();
        spinnerOperaciones = new javax.swing.JSpinner();
        panelParametros = new javax.swing.JPanel();
        lblAlgoritmo = new javax.swing.JLabel();
        comboAlgoritmo = new javax.swing.JComboBox<>();
        lblSemilla = new javax.swing.JLabel();
        txtSemilla = new javax.swing.JTextField();
        btnIniciarSimulacion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelFuente.setBorder(javax.swing.BorderFactory.createTitledBorder("Fuente de Instrucciones"));

        btnGroupFuente.add(radioCargarArchivo);
        radioCargarArchivo.setText("Cargar desde Archivo");
        radioCargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCargarArchivoActionPerformed(evt);
            }
        });

        lblRutaArchivo.setText("Ruta del Archivo:");

        txtRutaArchivo.setEditable(false);

        btnBuscarArchivo.setText("Buscar...");
        btnBuscarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarArchivoActionPerformed(evt);
            }
        });

        btnGroupFuente.add(radioGenerarNuevo);
        radioGenerarNuevo.setText("Generar Nueva Simulación");
        radioGenerarNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioGenerarNuevoActionPerformed(evt);
            }
        });

        lblProcesos.setText("Procesos (P):");

        lblOperaciones.setText("Operaciones (N):");

        javax.swing.GroupLayout panelFuenteLayout = new javax.swing.GroupLayout(panelFuente);
        panelFuente.setLayout(panelFuenteLayout);
        panelFuenteLayout.setHorizontalGroup(
            panelFuenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFuenteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFuenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFuenteLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(panelFuenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblProcesos)
                            .addComponent(lblOperaciones))
                        .addGap(18, 18, 18)
                        .addGroup(panelFuenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinnerProcesos)
                            .addComponent(spinnerOperaciones)))
                    .addGroup(panelFuenteLayout.createSequentialGroup()
                        .addGroup(panelFuenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioCargarArchivo)
                            .addComponent(radioGenerarNuevo))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelFuenteLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblRutaArchivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRutaArchivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarArchivo)))
                .addContainerGap())
        );
        panelFuenteLayout.setVerticalGroup(
            panelFuenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFuenteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioCargarArchivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFuenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRutaArchivo)
                    .addComponent(txtRutaArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarArchivo))
                .addGap(18, 18, 18)
                .addComponent(radioGenerarNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFuenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProcesos)
                    .addComponent(spinnerProcesos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFuenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOperaciones)
                    .addComponent(spinnerOperaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelParametros.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros de Simulación"));

        lblAlgoritmo.setText("Algoritmo a Simular:");

        comboAlgoritmo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FIFO", "SC", "MRU", "RND" }));

        lblSemilla.setText("Semilla (para RND y Generación):");

        txtSemilla.setText("123456");

        javax.swing.GroupLayout panelParametrosLayout = new javax.swing.GroupLayout(panelParametros);
        panelParametros.setLayout(panelParametrosLayout);
        panelParametrosLayout.setHorizontalGroup(
            panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelParametrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAlgoritmo)
                    .addComponent(lblSemilla))
                .addGap(18, 18, 18)
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboAlgoritmo, 0, 266, Short.MAX_VALUE)
                    .addComponent(txtSemilla))
                .addContainerGap())
        );
        panelParametrosLayout.setVerticalGroup(
            panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelParametrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlgoritmo)
                    .addComponent(comboAlgoritmo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemilla)
                    .addComponent(txtSemilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnIniciarSimulacion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnIniciarSimulacion.setText("Iniciar Simulación");
        btnIniciarSimulacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarSimulacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelFuente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelParametros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnIniciarSimulacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelFuente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelParametros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIniciarSimulacion, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void radioCargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        toggleInputSource(true);
    }                                                  

    private void radioGenerarNuevoActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        toggleInputSource(false);
    }                                                 

    private void btnBuscarArchivoActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            txtRutaArchivo.setText(selectedFile.getAbsolutePath());
        }
    }                                                

    private void btnIniciarSimulacionActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        // 1. Crear el Controlador
        Controller controller = new Controller();

        // 2. Recolectar Parámetros de Simulación
        String algNombre = (String) comboAlgoritmo.getSelectedItem();
        long semilla;
        try {
            semilla = Long.parseLong(txtSemilla.getText());
        } catch (NumberFormatException e) {
            semilla = System.currentTimeMillis(); // Usar semilla aleatoria si es inválida
            txtSemilla.setText(String.valueOf(semilla));
        }

        // 3. Instanciar el algoritmo seleccionado
        PageReplacementAlgorithm algoritmo;
        switch (algNombre) {
            case "FIFO":
                algoritmo = new FIFO();
                break;
            case "SC":
                algoritmo = new SC();
                break;
            case "MRU":
                algoritmo = new MRU();
                break;
            case "RND":
            default:
                algoritmo = new RND(); // RND usa la semilla
                break;
        }

        // 4. Configurar el controlador según la fuente de datos
        if (radioCargarArchivo.isSelected()) {
            String rutaArchivo = txtRutaArchivo.getText();
            if (rutaArchivo.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                        "Por favor, seleccione un archivo de simulación.", 
                        "Error", 
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
            controller.setupSimulation(algoritmo, semilla, rutaArchivo, 0, 0);
        } else {
            // Generar nuevo
            int P = (int) spinnerProcesos.getValue();
            int N = (int) spinnerOperaciones.getValue();
            controller.setupSimulation(algoritmo, semilla, null, P, N);
            
            // TODO: Agregar lógica para "Descargar archivo generado" [cite: 60]
        }

        // 5. Ocultar este menú y mostrar la ventana de simulación
        this.setVisible(false);
        
        // TODO: Crear y mostrar la ventana de simulación principal
        // Ejemplo: new VentanaSimulacion(controller).setVisible(true);
        // Por ahora, solo iniciamos la simulación en consola para probar
        System.out.println("Simulación configurada. Iniciando...");
        
        // (En el proyecto real, la VentanaSimulacion llamaría a resumeSimulation)
        // (Aquí solo probamos que el setup funciona)
        
        // this.dispose(); // Cerrar esta ventana
    }                                                    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Menu().setVisible(true));
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnBuscarArchivo;
    private javax.swing.ButtonGroup btnGroupFuente;
    private javax.swing.JButton btnIniciarSimulacion;
    private javax.swing.JComboBox<String> comboAlgoritmo;
    private javax.swing.JLabel lblAlgoritmo;
    private javax.swing.JLabel lblOperaciones;
    private javax.swing.JLabel lblProcesos;
    private javax.swing.JLabel lblRutaArchivo;
    private javax.swing.JLabel lblSemilla;
    private javax.swing.JPanel panelFuente;
    private javax.swing.JPanel panelParametros;
    private javax.swing.JRadioButton radioCargarArchivo;
    private javax.swing.JRadioButton radioGenerarNuevo;
    private javax.swing.JSpinner spinnerOperaciones;
    private javax.swing.JSpinner spinnerProcesos;
    private javax.swing.JTextField txtRutaArchivo;
    private javax.swing.JTextField txtSemilla;
    // End of variables declaration                   
}